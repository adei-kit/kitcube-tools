#! /bin/sh
# Author: A. Kopmann, N.Flatinger
#
# History:
#
# /etc/init.d/kitcube-data
#
# Start generation of simulated data for kitcube modules
#
### BEGIN INIT INFO
# Provides:       kitcube-data 
# Required-Start: $network
# Required-Stop:
# Default-Start:  3 5
# Default-Stop:   0 1 2 6
# Description:    starts /home/cube/kitcube-tools-0.3/src/kitcube-data/kitcube-data
### END INIT INFO

# Use second argument as module name
#
if [ "x$2" != "x" ] ; then
	#echo "Starting service for module $2"
	KITMOD=$2
	KITMODTITLE="for $2"
else
	# Start default application
	KITMOD="data"
fi

SERVICE_START="yes"
SERVICE_USER="cube"
SERVICE_GROUP="users"
SERVICE_TITLE="KITCube DataServer $KITMODTITLE"
SERVICE_NAME=kitcube-$KITMOD
SERVICE=/home/cube/kitcube-tools-0.3/src/kitcube-data/kitcube-$KITMOD
SERVICE_ARGS=" -d -i /home/cube/kitcube.ini -v 5"
SERVICE_PROCESS=${SERVICE_NAME:0:15}


# load Eye specific config file ...
#if  test -f /etc/eye.config; then
#  echo Reading from /etc/eye.config ...
#  . /etc/eye.config
#fi

if [ -d /home/$SERVICE_USER ] ; then
	SERVICE_LOGFILE=/home/$SERVICE_USER/$SERVICE_NAME.$HOSTNAME.log
else
	SERVICE_LOGFILE=/tmp/$SERVICE_NAME.$HOSTNAME.log
	SERVICE_USER="root"
	SERVICE_GROUP="root"
fi

# Set $HOME env. variable
export HOME=/home/$SERVICE_USER

base=${0##*/}			# nimmt vom Skript Kommando Aufruf den Verzeichnis-Anteil weg
link=${base#*[SK][0-9][0-9]}	# nimmt vom Skript Dateinamen den rcX.d Sart/Stop-Anteil weg

# was soll das folgende Konstrukt bringen???
test $link = $base && SERVICE_START=yes
test "$SERVICE_START" = yes || exit 0



if ! test -x $SERVICE ; then
	echo "No $SERVICE_TITLE found ($SERVICE)!"
	exit 1
fi

return=$rc_done	# FIXME: SUSE special
case "$1" in
	status)
		# TODO: List all kitcube data processes?!
		/sbin/checkproc $SERVICE_PROCESS	# FIXME: SUSE special
		if test $? -eq 0 ; then
			echo "$SERVICE_TITLE '$SERVICE_NAME' is running"
		else
			echo "$SERVICE_TITLE '$SERVICE_NAME' is stopped"
		fi
		exit 1
		;;
	start)
		/sbin/checkproc $SERVICE_PROCESS	# FIXME: SUSE special
		if test $? -eq 0 ; then
			echo "$SERVICE_TITLE '$SERVICE_NAME' already running $rc_failed"
			exit 1
		fi
		# execute in $SERVICE_USER's home directory
#		rm -f $SERVICE_LOGFILE
		touch $SERVICE_LOGFILE
		chown $SERVICE_USER.users $SERVICE_LOGFILE
		/sbin/startproc -l $SERVICE_LOGFILE \
			-u $SERVICE_USER $SERVICE $SERVICE_ARGS || return=$rc_failed	# FIXME: SUSE special
		echo -n "Starting $SERVICE_TITLE (Logfile: $SERVICE_LOGFILE)"
		echo -e "$return"
		;;
	stop)
		/sbin/checkproc $SERVICE_PROCESS	# FIXME: SUSE special
		if test $? -ne 0 ; then
			echo "$SERVICE_TITLE '$SERVICE_NAME' not running $rc_failed"
			exit 1
		fi
		echo  "Shutting down $SERVICE_TITLE"
		/sbin/killproc $SERVICE_PROCESS || return=$rc_failed	# FIXME: SUSE special
		;;
	restart)
		$0 stop && $0 start || return=$rc_failed
		;;
	*)
		echo "Usage: $0 {status|start|stop|restart} [module name]"
		exit 1
		;;
esac
